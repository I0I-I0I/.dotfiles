#!/usr/bin/env bash

set -euo pipefail

check_command() {
    command_exists() {
        command -v "$1" >/dev/null 2>&1
    }

    msg="'$1' is not installed!"
    if ! command_exists "$1"; then
        echo "$msg"
        notify-send -a TimeSpent "$msg" -u critical -t 3000
        exit 1
    fi
}

check_command timew
check_command fzf

get_current() {
    current_tracking=$(timew get dom.active)

    if [ -n "$current_tracking" ] && [ "$current_tracking" != "0" ]; then
        category=$(timew get dom.active.tags)
        time_output=$(timew day "$category" 2>/dev/null | grep Tracked | awk '{print $2}')
        if [ -n "$time_output" ]; then
            IFS=: read hours minutes seconds <<< "$time_output"
            echo "${hours}h ${minutes}m $category"
        else
            echo "Tracking: $category"
        fi
    else
        echo ""
    fi
}

timespent_set() {
    CATEGORIES=(
        "CUSTOMIZING"
        "PROGRAMMING"
        "WASTED"
        "STOP"
    )

    selected=$(printf "%s\n" "${CATEGORIES[@]}" | fzf --prompt="Category:")

    if [ -z "$selected" ]; then
        exit 0
    fi

    if [[ "$selected" == "STOP" ]]; then
        timew stop
        tmux set -g status-right ""
        exit 0
    else
        timew start "$selected" >/dev/null 2>&1
        status_text="$(get_current)"
        tmux set -g status-right "#(printf \"$status_text\")"
    fi
}

case "$1" in
    "get") get_current ;;
    "set") timespent_set ;;
esac
