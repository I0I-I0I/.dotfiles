#!/usr/bin/env bash
# ~/.dotfiles/scripts/translate
set -euo pipefail

# If arguments were given, use them. Otherwise read stdin (so piping works).
if [ $# -gt 0 ]; then
  TEXT="$*"
else
  if [ -t 0 ]; then
    echo "Usage: translate \"text to translate\"  (or pipe text into the script)" >&2
    exit 2
  else
    TEXT="$(cat -)"
  fi
fi

# target language (change default or set env var TRANSLATE_TARGET)
TL="${TRANSLATE_TARGET:-en}"

# check trans exists
if ! command -v trans >/dev/null 2>&1; then
  echo "translate-shell (trans) not found. Install it (e.g., pacman -S translate-shell or from AUR)." >&2
  exit 3
fi

# run translate-shell; -b gives brief output (just the translation)
trans -b :"${TL}" -- "${TEXT}" 2>/dev/null || { echo "Error translating" >&2; exit 4; }

