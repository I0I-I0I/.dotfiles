[
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },

  {
    "key": "alt+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+n",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+p",
    "command": "editor.action.addSelectionToPreviousFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+p",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "editorFocus"
  },

  {
    "key": "alt+s",
    "command": "clangd.switchheadersource",
    "when": "editorTextFocus && resourceLangId == 'c' || editorTextFocus && resourceLangId == 'cpp' || editorTextFocus && resourceLangId == 'cuda-cpp' || editorTextFocus && resourceLangId == 'objective-c' || editorTextFocus && resourceLangId == 'objective-cpp'"
  },

  {
    "key": "g r a",
    "command": "editor.action.codeAction",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g r n",
    "command": "editor.action.rename",
    "when": "vim.mode == 'Normal' && editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.action.findInFiles",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.revealDefinition",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g r r",
    "command": "editor.action.goToReferences",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g r i",
    "command": "editor.action.goToImplementation",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "[ d",
    "command": "editor.action.marker.prev",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "] d",
    "command": "editor.action.marker.next",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "shift-k",
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft",
    "when": "vim.mode == 'Normal'"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight",
    "when": "vim.mode == 'Normal'"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp",
    "when": "vim.mode == 'Normal'"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown",
    "when": "vim.mode == 'Normal'"
  },

  {
    "key": "space t",
    "command": "workbench.action.closeOtherEditors",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },

  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-s",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    }
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },

  {
    "key": "ctrl+y",
    "command": "runCommands",
    "args": {
      "commands": [
        "scrollLineUp",
        "scrollLineUp",
        "scrollLineUp",
        "scrollLineUp"
      ]
    },
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+e",
    "command": "runCommands",
    "args": {
      "commands": [
        "scrollLineDown",
        "scrollLineDown",
        "scrollLineDown",
        "scrollLineDown"
      ]
    },
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },

  {
    "key": "ctrl+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "space .",
    "command": "workbench.action.showAllEditors",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "quickInput.next",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+p",
    "command": "quickInput.previous",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.nextEditorInGroup",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.previousEditorInGroup",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.showAllSymbols",
    "when": "vim.mode == 'Normal' && !accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "g O",
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode == 'Normal' && !accessibilityHelpIsShown && !accessibleViewIsShown && editorTextFocus"
  },

  {
    "key": "space a",
    "command": "vscode-harpoon.addEditor",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space h",
    "command": "vscode-harpoon.editEditors",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space p",
    "command": "vscode-harpoon.editorQuickPick",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space 1",
    "command": "vscode-harpoon.gotoEditor1",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space 2",
    "command": "vscode-harpoon.gotoEditor2",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space 3",
    "command": "vscode-harpoon.gotoEditor3",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space 4",
    "command": "vscode-harpoon.gotoEditor4",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space 5",
    "command": "vscode-harpoon.gotoEditor5",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  {
    "key": "escape",
    "command": "composer.closeComposerTab",
    "when": "composerFocused && !editorTextFocus || !editorTextFocus && focusedView =~ /^workbench.panel.aichat.view/"
  }
]
